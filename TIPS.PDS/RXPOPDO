/* --------------------  rexx procedure  -------------------- *
 | Name:      RXPopDo                                         |
 | ISPF - Developers - Tips and Tricks                        |
 |                                                            |
 | Function:  Scan the provided PDS and invoke the            |
 |            rxpopm edit macro to generate a report          |
 |            of a possible ADDPOP command with the Row       |
 |            and Column mostly centered.                     |
 |                                                            |
 | Syntax:    %rxpopdo                                        |
 |                                                            |
 * ---------------------------------------------------------- */
  arg dsn

  if sysdsn(dsn) /= 'OK' then do
    say 'invalid dsn' dsn
    say sysdsn(dsn)
    exit
  end

  call outtrap 'x.'
  address tso 'listd' dsn 'mem'
  call outtrap 'off'

  x=listdsi(dsn)
  dsn = sysdsname

  c = 4
  l.1 = 'ISPF Panel PopUp Centering Suggestions'
  l.2 = ' '
  l.3 = left('Panel',8) 'ADDPOP Command'
  l.4 = left('-',8,'-') left('-',25,'-')
  row = 24   /* starting place */

  Address ISPExec
  do i = 7 to x.0
    m = word(x.i,1)
    poplog = 'x'
    'vput (poplog)'
    "view dataset('"dsn"("m")')  macro(rxpopm)"
    'vget (poplog)'
    if strip(poplog) /= 'x' then do
      c = c + 1
      l.c = m poplog
      parse value poplog with rw cl
      if rw < row then row = rw
    end
  end

  l.0 = c
  do i = 5 to l.0
     parse value l.i with m rw cl
     rw = row
     l.i = left(m,8) 'ADDPOP ROW('rw') COLUMN('cl')'
     end

 Address TSO
  dd = 'dd'random(9999)
/* ------------------------------------------ *
 | Allocate a temporary data set for our data |
 * ------------------------------------------ */
  'Alloc f('dd') new spa(5,5) tr' ,
    'recfm(v b) lrecl(80) blksize(0)'
/* ----------------------- *
 | Write out the stem data |
 * ----------------------- */
  'Execio * diskw' dd '(finis stem l.'
/* -------------------------------------------------- *
 | Access the Temporary Data Set using ISPF           |
 | Library Services.                                  |
 | Then using ISPF Browse service to browse the data. |
 | And use Library Services to Free the Data Set.     |
 * -------------------------------------------------- */
  Address ISPExec
  'lminit dataid(ddb) ddname('dd')'
  'browse dataid('ddb')'
  'lmfree dataid('ddb')'
/* ----------------------------- *
 | Last Free the z/OS Allocation |
 * ----------------------------- */
  Address TSO
  'Free f('dd')'
