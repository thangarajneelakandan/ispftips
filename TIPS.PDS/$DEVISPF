  /*%NOcomment ----------  rexx procedure  -------------------- *
  | Name:      $devispf                                        |
  |                                                            |
  |            ISPF - Developers - Tips and Tricks             |
  |                                                            |
  | Function:  Display the list of ISPF Developer Tips         |
  |            and Tricks Examples                             |
  |                                                            |
  | Syntax:    %$devispf                                       |
  |                                                            |
  | History:  (most recent on top)                             |
  |            04/02/19 - Add Tryit for Panels                 |
  |            04/01/19 - Only Execute REXX members            |
  |            03/29/19 - Make dynamic for the dsn             |
  |                     - Change to $$README                   |
  |            03/25/19 - Improve comemnts                     |
  |            03/21/19 - Add Find and Locate                  |
  |            03/20/19 - Creation                             |
  |                                                            |
  * ---------------------------------------------------------- */
  parse source src
  if word(src,5) = '?' then do
     x = listdsi(word(src,4) 'FILE')
     dev_tips_dsn = sysdsname
     end
  else dev_tips_dsn = word(src,5)
  null = ''

  /* ----------------------------------------- *
  | Read in the $README Member for Table data |
  * ----------------------------------------- */
  dd = 'DD'random(99999)
  "Alloc f("dd") shr reuse ds('"dev_tips_dsn"($$readme)')"
  'Execio * diskr 'dd '(finis stem in.'
  'Free f('dd')'

  /* ------------------------------------------------------ *
  | Define the devtips pds as an alternate SYSEXEC library |
  | and as an ISPPLIB (Panels)                             |
  * ------------------------------------------------------ */
  "Altlib Act App(Exec) Dataset('"dev_tips_dsn"')"
  Address ISPExec
  "Libdef ISPPLIB Dataset ID('"dev_tips_dsn"') stack"
  "Libdef ISPSLIB Dataset ID('"dev_tips_dsn"') stack"

  /* -------------------------------------------------------- *
  | This enables RFIND which assumes that in one of the      |
  | system command tables an entry for RFIND has been added  |
  | with TRUNC of 0 and VERB of &USRRFIND. This allows an    |
  | application to set the USRRFIND variable to PASSTHRU or  |
  | to null. If PASTHRU then the application will see RFIND. |
  * -------------------------------------------------------- */
  usrrfind = 'PASSTHRU'
  'vput (usrrfind) shared'

  /* ---------------- *
  | Create the Table |
  * ---------------- */
  'Control Errors Return'
Refresh:
  'TBCreate devtips names(dmem dtype ddesc) NoWrite'

  /* ---------------------- *
  | Now populate the table |
  * ---------------------- */
  hit = 0
  do i = 1 to in.0
    if hit = 0 then do
      if word(in.i,1) /= 'Member' then iterate
      if word(in.i,2) /= 'Type' then iterate
      else do
        hit = 1
        iterate
      end
    end
    if left(in.i,1) = ' ' then iterate
    parse value in.i with dmem dtype ddesc
    ddesc = strip(ddesc)
    'TBAdd devtips'
  end

  /* ------------------- *
  | Sort by Member Name |
  * ------------------- */
  'TBSort devtips Fields(dmem,C,A)'

  /* --------------------------------------------- *
  | Display the ISPF Table and process selections |
  * --------------------------------------------- */
  ztdtop = 1
  ztdsels = 0
  save_loc = 0
  save_floc = 0
  do forever
    if ztdsels > 1 then do
      'tbdispl devtips'
    end
    else do
      'tbtop devtips'
      'tbskip devtips number('ztdtop')'
      'tbdispl devtips panel($devpp)'
    end
    if rc > 4 then leave
    if zcmd /= null then
    if zcmd = 'RFIND' then
    zcmd = 'FIND' save_find
    if zcmd /= null then
    Select
      When abbrev("FIND",word(zcmd,1),1) = 1 then do
        find = word(zcmd,2)
        save_find = find
        wrap   = 0
        if save_floc > 0 then do
          'tbtop devtips'
          'tbskip devtips number('save_floc')'
        end
        do forever
          'tbskip devtips'
          if rc > 0 then do
            'tbtop devtips'
            'tbskip devtips'
            if wrap = 1 then do
              zedsmsg = 'Not Found'
              zedlmsg = find 'string not found in any member' ,
                'name. Try again.'
              'setmsg msg(isrz001)'
              leave
            end
            else wrap = 1
          end
          if pos(find,translate(dmem ddesc)) > 0 then do
            'tbquery devtips position(row)'
            ztdtop = row
            save_floc = row
            if wrap = 1 then do
              zedsmsg = 'Wrapped'
              zedlmsg = 'Find restarted at the top of the table.'
              'setmsg msg(isrz001)'
            end
            leave
          end
        end
      end
      When abbrev("LOCATE",word(zcmd,1),1) = 1 then do
        locate = word(zcmd,2)
        dmem = translate(word(zcmd,2))
        'tbtop devtips'
        ztdtop = 0
        'tbsarg devtips'
        'tbscan devtips arglist(dmem) position(scanrow) condlist(ge)'
        if rc = 0 then do
          ztdtop = scanrow
          zedsmsg = 'Found'
          zedlmsg = word(zcmd,2) 'was found in row' ztdtop
          'Setmsg msg(isrz001)'
        end
        else do
          zedsmsg = 'Not Found'
          zedlmsg = word(zcmd,2) 'was not found'
          'Setmsg msg(isrz001)'
        end
      end
      When abbrev("ONLY",word(zcmd,1),1) = 1 then do
        'tbtop devtips'
        'tbskip devtips'
        string = subword(zcmd,2)
        do forever
          if pos(string,translate(dmem dtype ddesc)) = 0 then
          'tbdelete devtips'
          'tbskip devtips'
          if rc > 0 then do
            ztdtop = 1
            leave
          end
        end
      end
      When abbrev("REFRESH",word(zcmd,1),1) = 1 then do
        'TBEnd devtips'
        signal refresh
      end
      Otherwise do
        zedsmsg = 'Unknown'
        zedlmsg = zcmd 'is an unknown command - try again.'
        'setmsg msg(isrz001)'
      end
    end
    zcmd = null
    if dsel /= null then do
      'Control Display Save'
      Select
        When dsel = 'B' | dsel = 'S' then
        "Browse Dataset('"dev_tips_dsn"("dmem")')"
        When dsel = 'E' then
        "Edit Dataset('"dev_tips_dsn"("dmem")')"
        When dsel = 'R' then do
          Address TSO
          x = Prompt('on')
          "Receive inds('"dev_tips_dsn"("dmem")')"
          Address ISPExec
        end
        When dsel = 'T' then do
          if translate(dtype) /= 'PANEL' then do
            zedsmsg = 'Error'
            zedlmsg = 'Not able to TRYIT on a non-PANEL member.'
            'Setmsg msg(isrz001)'
          end
          else do
            x = testtry()
            if x = 8 then
            "View Dataset('"dev_tips_dsn"("dmem")') Macro(tryit)"
            else do
              zedsmsg = 'Error'
              zedlmsg = left('The TRYIT Edit Macro is not available.',75) ,
                left('Receive and install it from the #TRYIT member of',75) ,
                'this samples data set and then try it again.'
              'Setmsg msg(isrz001)'
            end
          end
        end
        When dsel = 'X' then do
          if translate(dtype) /= 'REXX' then do
            zedsmsg = 'Error'
            zedlmsg = 'Not able to execute a non-REXX member.'
            'Setmsg msg(isrz001)'
          end
          else do
            zxcmd = null
            'Addpop'
            'Display Panel($devpx)'
            'Rempop'
            Address TSO dmem zxcmd
            zxcmd = null
          end
        end
        Otherwise nop
      end
      'Control Display Restore'
    end
    dsel = null
  end

  /* ------------------------- *
  | Done to clean up and exit |
  * ------------------------- */
Done:
  'TBEnd devtips'
  'Libdef ISPPLIB'
  'Libdef ISPSLIB'
  Address TSO 'Altlib Deact App(Exec)'
  Exit

TestTry:
  Address TSO
  call outtrap 't.'
  '%tryit'
  trc = rc
  call outtrap 'off'
  return trc
