  /* --------------------  rexx procedure  -------------------- *
  | Name:      $devcpy                                         |
  |                                                            |
  | Function:  Prompt for target Panel, REXX, and Skel libs    |
  |            and then copy the sample members to their       |
  |            respective locations.                           |
  |                                                            |
  | Syntax:    %devcopy                                        |
  |                                                            |
  | Usage Notes: Should be executed from a member list         |
  |              of the devtips.pds library so that the        |
  |              source library can be dynamically found.      |
  |                                                            |
  * ---------------------------------------------------------- */
  parse source src
  parse value '' with null panels rexx skels

  /* ----------------------------------------------- *
  | Get the source data set name either from        |
  | word 5 of the source, or if that is unknown (?) |
  | then using the ddname with listdsi to get it.   |
  * ----------------------------------------------- */
  devtdsn = word(src,5)
  if strip(devtdsn) = '?' then
  if word(src,4) = '?' then do
    say 'bad'
    exit
  end
  else do
    x = listdsi(word(src,4) 'FILE')
    devtdsn = sysdsname
  end

  /* ----------------------- *
  | Libdef to this data set |
  * ----------------------- */
  Address ISPExec
  "Libdef ISPPLIB Dataset ID('"devtdsn"') Stack"

  do
    'Addpop'
    'Display Panel($devcpyp)'
    drc = rc
    'Rempop'
  end
  if drc > 0 then call done

  dd = '$D'random(99999)
  Address TSO
  "Alloc f("dd") shr reuse ds('"devtdsn"($$readme)')"
  'Execio * diskr' dd '(finis stem in.'
  'Free f('dd')'

  /* ------------------ *
  | Find Header Record |
  * ------------------ */
  do i = 1 to in.0
    if word(in.i,1) = 'Member'
    then if word(in.i,2) = 'Type'
    then leave
  end
  /* ---------------------- *
  | Process member records |
  * ---------------------- */
  do m = i+1 to in.0
    parse value in.m with mem type .
    type = translate(type)
    if type = 'PANEL' then
    panels = panels mem
    if type = 'REXX' then
    rexx = rexx mem
    if type = 'MACRO' then
    rexx = rexx mem
    if type = 'SKEL' then
    skels = skels mem
  end

  /* ----------------- *
  | Now do the Copies |
  * ----------------- */
  Address ISPExec
  "lminit dataid(indd1) dataset('"devtdsn"')"
  "lminit dataid(outdd1) dataset("pnldsn")"
  do i = 1 to words(panels)
    fm = word(panels,i)
    prog = 'Copying Panel' fm
    'Control Display Lock'
    'Addpop'
    'Display Panel(pnprog2)'
    'Rempop'
    "lmcopy fromid("indd1") todataid("outdd1") frommem("fm") replace"
  end
  "lmfree dataid("outdd1")"
  "lminit dataid(outdd1) dataset("rxdsn")"
  do i = 1 to words(rexx)
    fm = word(rexx,i)
    prog = 'Copying Rexx' fm
    'Control Display Lock'
    'Addpop'
    'Display Panel(pnprog2)'
    'Rempop'
    "lmcopy fromid("indd1") todataid("outdd1") frommem("fm") replace"
  end
  "lmfree dataid("outdd1")"
  "lminit dataid(outdd1) dataset("skdsn")"
  do i = 1 to words(skels)
    fm = word(skels,i)
    prog = 'Copying Skels' fm
    'Control Display Lock'
    'Addpop'
    'Display Panel(pnprog2)'
    'Rempop'
    "lmcopy fromid("indd1") todataid("outdd1") frommem("fm") replace"
  end
  "lmfree dataid("indd1")"
  "lmfree dataid("outdd1")"

  /* ------------------------------------- *
  | Finished for free the Libdef and exit |
  * ------------------------------------- */
Done:
  'Libdef ISPPLIB'
